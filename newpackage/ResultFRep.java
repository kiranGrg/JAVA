package newpackage;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ResultFRep.java
 *
 * Created on Mar 12, 2012, 4:08:52 PM
 */

/**
 *
 * @author kiranroma
 */

import java.sql.*;
import javax.swing.*;

public class ResultFRep extends javax.swing.JFrame {

    private Connection con = null;
    private ResultSet rs = null;
    private PreparedStatement pst = null;
    private String query = null;
    private ButtonGroup rb = new ButtonGroup();
    private Statement stm = null;
    private String title = "";

    private int[] id = null;

    /** Creates new form ResultFRep */
    public ResultFRep() {
        initComponents();
        rb.add(rbgroup);
        rb.add(rbindiv);
        rbindiv.setSelected(true);
        pnl2.setEnabled(false);
        cmbgrade2.setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        rbgroup = new javax.swing.JRadioButton();
        rbindiv = new javax.swing.JRadioButton();
        pnl1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbgrade1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtroll = new javax.swing.JTextField();
        pnl2 = new javax.swing.JPanel();
        cmbgrade2 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cmbterm = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cmbdate = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/result1.png"))); // NOI18N
        jLabel1.setText("Result");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 553, 60);

        rbgroup.setText("Group Search");
        rbgroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbgroupActionPerformed(evt);
            }
        });
        getContentPane().add(rbgroup);
        rbgroup.setBounds(380, 120, 120, 30);

        rbindiv.setText("Individual Search");
        rbindiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbindivActionPerformed(evt);
            }
        });
        getContentPane().add(rbindiv);
        rbindiv.setBounds(60, 120, 140, 30);

        pnl1.setLayout(null);

        jLabel2.setText("Grade:");
        pnl1.add(jLabel2);
        jLabel2.setBounds(10, 15, 50, 20);

        cmbgrade1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X9", "X10" }));
        pnl1.add(cmbgrade1);
        cmbgrade1.setBounds(60, 10, 80, 30);

        jLabel3.setText("Name:");
        pnl1.add(jLabel3);
        jLabel3.setBounds(10, 65, 40, 20);
        pnl1.add(txtname);
        txtname.setBounds(60, 60, 170, 30);

        jLabel4.setText("Roll No:");
        pnl1.add(jLabel4);
        jLabel4.setBounds(10, 115, 50, 20);
        pnl1.add(txtroll);
        txtroll.setBounds(60, 110, 90, 30);

        getContentPane().add(pnl1);
        pnl1.setBounds(20, 150, 240, 170);

        pnl2.setLayout(null);

        cmbgrade2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8", "X9", "X10" }));
        pnl2.add(cmbgrade2);
        cmbgrade2.setBounds(70, 10, 90, 30);

        jLabel5.setText("Grade:");
        pnl2.add(jLabel5);
        jLabel5.setBounds(10, 15, 50, 20);

        getContentPane().add(pnl2);
        pnl2.setBounds(360, 150, 170, 170);

        jLabel6.setText("Terms:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(60, 80, 50, 30);

        cmbterm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "1", "2", "3" }));
        cmbterm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbtermActionPerformed(evt);
            }
        });
        getContentPane().add(cmbterm);
        cmbterm.setBounds(130, 75, 140, 30);

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(280, 330, 90, 30);

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(173, 330, 90, 30);

        cmbdate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select" }));
        getContentPane().add(cmbdate);
        cmbdate.setBounds(380, 75, 140, 30);

        jLabel7.setText("Date:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(310, 80, 50, 30);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-569)/2, (screenSize.height-408)/2, 569, 408);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(cmbterm.getSelectedIndex() != 0 && cmbdate.getSelectedIndex() != 0){
            dbConnect db = new dbConnect();
            con = db.Connect();
            if(con != null){
                String term = String.valueOf(cmbterm.getSelectedIndex());
                if(rbgroup.isSelected()){
                String grade = (String)cmbgrade2.getSelectedItem();

                if(!grade.equalsIgnoreCase("select") && !term.equalsIgnoreCase("0")){
                     query = "SELECT exam.name, exam.studentId, exam.roll, exam.report, exam.contact FROM exam,examterm "+
                             "WHERE exam.id = examterm.id AND examterm.grade = '"+grade+"' AND examterm.term = '"+term+"' AND examterm.date = ?";

                     //db connection ...
                     //System.out.println(query);

                     try{
                            pst = con.prepareStatement(query);
                            pst.setDate(1, Date.valueOf(String.valueOf(cmbdate.getSelectedItem())));
                            rs = pst.executeQuery();
                            if(rs.next()){
                                title = "RESULTS OF GRADE "+grade+" OF TERM "+ term;
                                new TabulateData(title,query).setVisible(true);
                            }
                            else{
                                JOptionPane.showMessageDialog(this, "No data found.\nNo result records has been uploaded. thank you");
                            }
                     }
                     catch(Exception e){
                        JOptionPane.showMessageDialog(this, "Error :"+e.getMessage());
                     }
                     finally{
                        db.Close(con);
                     }
                    //new TabulateData("From Menu Fee",grade,9).setVisible(true);
                }
                else{
                    JOptionPane.showMessageDialog(this, "Please Provide all Info");
                }
            }
            else{
                String name = txtname.getText().trim();
                String roll = txtroll.getText().trim();
                String grade = (String)cmbgrade1.getSelectedItem();
                if(!name.equals("") && !roll.equals("") && !grade.equalsIgnoreCase("select") && !term.equalsIgnoreCase("select")){
                //String namev = getName(name);
                    if(!getName(name).equals("")){

                        boolean result = getValidation(name, roll, grade);
                        if(result){
                            query = "SELECT result.report FROM (SELECT exam.report,exam.studentId,examterm.term,examterm.date,examterm.grade FROM exam,examterm WHERE exam.id = examterm.id) as result "+
                                    "WHERE result.studentId = (SELECT studentId FROM student_info WHERE name = ? AND grade = ? AND roll = ?) "+
                                    "AND result.term = ? AND result.grade = ? AND result.date = ?";
                            System.out.println(query);
                            try{
                                pst = con.prepareStatement(query);
                                pst.setString(1, name);
                                pst.setString(2, grade);
                                pst.setString(3, roll);
                                pst.setString(4, term);
                                pst.setString(5, grade);
                                pst.setDate(6, Date.valueOf(String.valueOf(cmbdate.getSelectedItem())));
                                rs = pst.executeQuery();
                                if(rs.next()){
                                    if(rs.getString(1).equalsIgnoreCase("p")){
                                        JOptionPane.showMessageDialog(this, name.toUpperCase()+" has passed "+term+" exam..\nCongratulations!");
                                    }
                                    else{
                                        JOptionPane.showMessageDialog(this, name.toUpperCase()+" is failed in "+term+" exam..\nStudy Hard!");
                                    }
                                }
                                else{
                                    JOptionPane.showMessageDialog(this, "No Data Found. May be result is not published or uploaded to database!!");
                                }
                            }
                            catch(Exception e){
                                JOptionPane.showMessageDialog(this, "Error : "+e.getMessage());
                            }
                            finally{
                                db.Close(con);
                            }

                        }
                      }
                     else{
                        JOptionPane.showMessageDialog(this, "Please Enter the full name");
                     }
                }
                else{
                    JOptionPane.showMessageDialog(this, "Please Provide the full Info a Student");
                 }
             }
            }
            else{
                JOptionPane.showMessageDialog(this, "Error in Connection");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Please Specify the Exam terms or date");
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed


    protected boolean getValidation(String name, String roll, String grade){
        boolean result = false;
        dbConnect db = new dbConnect();
        con = db.Connect();
        if(con != null){
            try{
                query = "SELECT * FROM student_info WHERE name = ? AND roll = ? AND grade = ? AND status = 'c'";
                pst = con.prepareStatement(query);
                pst.setString(1, name);
                pst.setInt(2, Integer.parseInt(roll));
                pst.setString(3, grade);
                rs = pst.executeQuery();
                if(rs.next()){
                    result = true;
                }
                else{
                    JOptionPane.showMessageDialog(this, "No Record of this info is found... \nThank You!!");
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(this, "Error in Sql : "+e.getMessage());
            }
            finally{
                //db.Close();
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Error in Connection");
        }

        return result;
    }
        protected String getName(String name){
        int len1 = 0,  len2 = 0 , i = 0, j = 0;
        String sname = "", s1 = "", s2 = "", s3 = "", s4 = "";


            i = name.indexOf(" ");
            if(i>0){
                len1 = name.length();
                s1 = name.substring(0, i);
                sname += s1+" ";
                s2 = (name.substring(i, len1)).trim();

                j = s2.indexOf(" ");
                if(j>0){
                    len2 = s2.length();
                    s3 = s2.substring(0, j);
                    sname += s3+" ";
                    s4 = (s2.substring(j, len2)).trim();
                    sname += s4+" ";
                }
                 else{
                    sname += s2;
                 }
                return sname;
                }
             else{
                  return "";
        }
    }

    private void rbindivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbindivActionPerformed
        // TODO add your handling code here:
        pnl1.setEnabled(true);
        cmbgrade1.setEnabled(true);
        txtname.setEnabled(true);
        txtroll.setEnabled(true);
        pnl2.setEnabled(false);
        cmbgrade2.setEnabled(false);
    }//GEN-LAST:event_rbindivActionPerformed

    private void rbgroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbgroupActionPerformed
        // TODO add your handling code here:
        pnl2.setEnabled(true);
        cmbgrade2.setEnabled(true);
        pnl1.setEnabled(false);
        cmbgrade1.setEnabled(false);
        txtname.setEnabled(false);
        txtroll.setEnabled(false);
    }//GEN-LAST:event_rbgroupActionPerformed

    private void cmbtermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbtermActionPerformed
        // TODO add your handling code here:
        if(cmbterm.getSelectedIndex() != 0){
            if(cmbdate.getItemCount() > 1){
            for(int k = cmbdate.getItemCount() - 1; k>0; k--){
                cmbdate.removeItemAt(k);
            }
            }

            dbConnect db = new dbConnect();
            con = db.Connect();
            if(con != null){
                try{
                    query = "SELECT id,date FROM examterm WHERE term = '"+String.valueOf(cmbterm.getSelectedIndex())+"'";
                    stm = con.createStatement();
                    rs = stm.executeQuery(query);
                    if(rs.next()){
                        rs.last();
                        id = new int[rs.getRow() + 1];
                        rs.beforeFirst();
                        int i = 0;
                        id[i] = 0;
                        i++;
                        while(rs.next()){
                            id[i] = rs.getInt(1);
                            cmbdate.addItem(rs.getObject(2));
                            i++;
                        }
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "No result has been published for the "+(String)cmbdate.getSelectedItem()+" exam");
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Error in Sql : "+e.getMessage());
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Error in Connection");
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Please Specify the term");
        }
        
    }//GEN-LAST:event_cmbtermActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ResultFRep().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbdate;
    private javax.swing.JComboBox cmbgrade1;
    private javax.swing.JComboBox cmbgrade2;
    private javax.swing.JComboBox cmbterm;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel pnl1;
    private javax.swing.JPanel pnl2;
    private javax.swing.JRadioButton rbgroup;
    private javax.swing.JRadioButton rbindiv;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtroll;
    // End of variables declaration//GEN-END:variables

}
