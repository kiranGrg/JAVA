package newpackage;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SalaryOptionF.java
 *
 * Created on Feb 27, 2012, 10:56:31 PM
 */
/**
 *
 * @author kiranroma
 */
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.BorderFactory.*;

public class SalaryOptionF extends javax.swing.JFrame {

    private DefaultTableModel model;
    private JTable table;
    private JScrollPane scrollPane;
    private ButtonGroup btg;
    private String query = null;
    /** Creates new form FeeOptionF */
    private String t_id = null, nam = null, post = null;
    private int parentFlag = 0;

    /** Creates new form SalaryOptionF
     * @param name1
     * @param tea_id
     * @param posts
     * @param parentStatus
     */
    public SalaryOptionF(String name1, String tea_id, String posts, int parentStatus) {
        post = posts;
        t_id = tea_id;
        parentFlag = parentStatus;
        nam = name1;

        initComponents();

        id.setText(t_id.toUpperCase());
        name.setText(nam.toUpperCase());

        pnl1.setBorder(BorderFactory.createLineBorder(java.awt.Color.BLACK));
        model = new DefaultTableModel();
        table = new JTable(model);
        table.setFillsViewportHeight(true);
        model.addColumn("S.NO");
        model.addColumn("Post");
        model.addColumn("Amount");
        model.addColumn("Date");
        model.addColumn("Report");
        int h = ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED;
        int v = ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED;
        scrollPane = new JScrollPane(table, v, h);
        pnl1.add(scrollPane);
        scrollPane.setBounds(5, 180, 610, 285);
        btg = new ButtonGroup();
        btg.add(all);
        btg.add(cur);
        all.setSelected(true);
        if (parentStatus == 1) {
            currentPaymentReport(4);
        } else if (parentStatus == 2) {
            currentPaymentReport(2);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPrint = new javax.swing.JButton();
        pnl1 = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cur = new javax.swing.JRadioButton();
        all = new javax.swing.JRadioButton();
        btnPay = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        getContentPane().setLayout(null);

        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        getContentPane().add(btnPrint);
        btnPrint.setBounds(180, 480, 90, 30);

        pnl1.setLayout(null);

        header.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14));
        header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        header.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/staffsalary_1.png"))); // NOI18N
        pnl1.add(header);
        header.setBounds(10, 0, 600, 60);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel2.setText("ID. No:");
        pnl1.add(jLabel2);
        jLabel2.setBounds(30, 130, 50, 20);

        id.setFont(new java.awt.Font("Tahoma", 0, 12));
        pnl1.add(id);
        id.setBounds(100, 130, 110, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel4.setText("Name:");
        pnl1.add(jLabel4);
        jLabel4.setBounds(30, 70, 50, 20);

        name.setFont(new java.awt.Font("Tahoma", 0, 12));
        pnl1.add(name);
        name.setBounds(100, 70, 140, 20);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Specify Date"));
        jPanel1.setForeground(new java.awt.Color(255, 255, 204));
        jPanel1.setLayout(null);

        cur.setText("Current Year");
        cur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                curActionPerformed(evt);
            }
        });
        jPanel1.add(cur);
        cur.setBounds(190, 30, 100, 25);

        all.setText("Till Now");
        all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allActionPerformed(evt);
            }
        });
        jPanel1.add(all);
        all.setBounds(60, 30, 70, 25);

        btnPay.setText("Recent Pay");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        jPanel1.add(btnPay);
        btnPay.setBounds(100, 60, 120, 30);

        pnl1.add(jPanel1);
        jPanel1.setBounds(270, 70, 330, 100);

        getContentPane().add(pnl1);
        pnl1.setBounds(0, 0, 621, 470);

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancel);
        btnCancel.setBounds(330, 480, 90, 30);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-637)/2, (screenSize.height-555)/2, 637, 555);
    }// </editor-fold>//GEN-END:initComponents

    private void curActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_curActionPerformed
        // TODO add your handling code here:
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        if (parentFlag == 2) {
            currentPaymentReport(1);
        } else if (parentFlag == 1) {
            currentPaymentReport(3);
        }
}//GEN-LAST:event_curActionPerformed

    protected void currentPaymentReport(int status) {

        TSsalary ts = new TSsalary();
        //ts.Connect();
        switch (status) {
            case 1:
                query = "SELECT teacherId,amount,dop,report FROM teachersalary WHERE teacherId = '" + t_id + "' AND date_format(dop,'%y') = date_format(now(),'%y')";
                break;
            case 2:
                query = "SELECT teacherId,amount,dop,report FROM teachersalary WHERE teacherId = '" + t_id + "'";
                break;
            case 3:
                query = "SELECT staffId,amount,dop,report FROM staffsalary WHERE staffId = '" + t_id + "' AND date_format(dop,'%y') = date_format(now(),'%y')";
                break;
            case 4:
                query = "SELECT staffId,amount,dop,report FROM staffsalary WHERE staffId = '" + t_id + "'";
                break;
        }
        boolean report = ts.tsSalary(model, query, post);
        ts.Close();
        if (!report) {
            JOptionPane.showMessageDialog(this, "Data Not Found or Salary Has Not Been Paid.");
        }

    }

    private void allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allActionPerformed
        // TODO add your handling code here:

        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);

        }
        if (parentFlag == 1) {
            currentPaymentReport(4);
        } else if (parentFlag == 2) {
            currentPaymentReport(2);
        }
}//GEN-LAST:event_allActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        // TODO add your handling code here:

        TSsalary ts = new TSsalary();
        if (parentFlag == 1) {
            query = "SELECT * FROM staffsalary WHERE staffId = '" + t_id + "' AND date_format(dop,'%y%m') = date_format(now(),'%y%m')";
        } else if (parentFlag == 2) {
            query = "SELECT * FROM teachersalary WHERE teacherId = '" + t_id + "' AND date_format(dop,'%y%m') = date_format(now(),'%y%m')";
        }
        boolean report = ts.currentSalaryStatus(query);
        if (report) {
            JOptionPane.showMessageDialog(this, "Salary Payment is Done of This Month. Thank YOu");
        } else {
            Object[] options = {"OK", "CANCEL"};
            //ImageIcon img = new ImageIcon(getClass().getResource(nam));
            int option = JOptionPane.showOptionDialog(this, "Salary has not been paid for this Month.Wanna Pay?", "Salary Payment Notice", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
            if (option == 0) {
                if (parentFlag == 1) {
                    query = "INSERT INTO staffsalary VALUES(null,'" + t_id + "',(SELECT salary FROM salaryamount WHERE post = '" + post + "'),now(),'p')";
                } else if (parentFlag == 2) {
                    query = "INSERT INTO teachersalary VALUES(null,'" + t_id + "',now(),(SELECT salary FROM tsalaryamount WHERE qfc = '" + post + "'),'p')";
                }
                int check = ts.paySalaryCurrent(query);
                if (check > 0) {
                    ts.Close();
                    JOptionPane.showMessageDialog(this, "Current Month payment record saved");
                    this.dispose();
                    new SalaryOptionF(nam, t_id, post, parentFlag).setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Problem in Saving Record");
                }

            } else {
                JOptionPane.showMessageDialog(this, "Pay Later On.  Thank You.");
            }
        }
    }//GEN-LAST:event_btnPayActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelActionPerformed
    {//GEN-HEADEREND:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnPrintActionPerformed
    {//GEN-HEADEREND:event_btnPrintActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPrintActionPerformed
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new SalaryOptionF("","").setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton all;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnPrint;
    private javax.swing.JRadioButton cur;
    private javax.swing.JLabel header;
    private javax.swing.JLabel id;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel name;
    private javax.swing.JPanel pnl1;
    // End of variables declaration//GEN-END:variables
}
